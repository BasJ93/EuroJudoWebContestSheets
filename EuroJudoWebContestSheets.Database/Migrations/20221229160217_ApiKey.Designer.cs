// <auto-generated />
using System;
using EuroJudoWebContestSheets.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EuroJudoWebContestSheets.Database.Migrations
{
    [DbContext(typeof(ContestSheetDbContext))]
    [Migration("20221229160217_ApiKey")]
    partial class ApiKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.12");

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Configurations.ApiKeyLinkRoleConfiguration", b =>
                {
                    b.Property<int>("ApiKeysId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RolesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApiKeysId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("ApiKeyLinkRoleConfiguration");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.ApiKeyLinkRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiKeyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApiKeyLinkRoles");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("SheetSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Short")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("TournamentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.ContestSheetData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompetitorBlue")
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("CompetitorWhite")
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Contest")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IponBlue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int?>("IponWhite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int?>("ShidoBlue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int?>("ShidoWhite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<bool>("ShowSimpleScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TournamentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WazaariBlue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int?>("WazaariWhite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TournamentId");

                    b.ToTable("ContestSheetData");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TournamentName")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Configurations.ApiKeyLinkRoleConfiguration", b =>
                {
                    b.HasOne("EuroJudoWebContestSheets.Database.Models.ApiKey", null)
                        .WithMany()
                        .HasForeignKey("ApiKeysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EuroJudoWebContestSheets.Database.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.ApiKeyLinkRole", b =>
                {
                    b.HasOne("EuroJudoWebContestSheets.Database.Models.ApiKey", "ApiKey")
                        .WithMany()
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ApiKey_ApiKeyLinkRole");

                    b.HasOne("EuroJudoWebContestSheets.Database.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Role_ApiKeyLinkRole");

                    b.Navigation("ApiKey");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Category", b =>
                {
                    b.HasOne("EuroJudoWebContestSheets.Database.Models.Tournament", "Tournament")
                        .WithMany("Categories")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Tournament_Category");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.ContestSheetData", b =>
                {
                    b.HasOne("EuroJudoWebContestSheets.Database.Models.Category", "Category")
                        .WithMany("SheetData")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Category_ContestSheetData");

                    b.HasOne("EuroJudoWebContestSheets.Database.Models.Tournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Tournament_ContestSheetData");

                    b.Navigation("Category");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Category", b =>
                {
                    b.Navigation("SheetData");
                });

            modelBuilder.Entity("EuroJudoWebContestSheets.Database.Models.Tournament", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
